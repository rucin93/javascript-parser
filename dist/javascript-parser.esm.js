function createCharDec(nr){return eval(`'\\u{${parseInt(nr).toString(16)}}'`)}function textParser(e){let r=";"+e.replace(/(\r\n|\n|\r)/gm,"\\n");const t=r.length;t%3!=0&&(r+=" ".repeat(3-t%3));return`t=0;for(c of\`${r.match(/.../g).map(e=>{let r=0;return e.split("").reverse().forEach(e=>{r*=97,r+=e.charCodeAt(0)-31}),r}).map(e=>String.fromCodePoint(e)).join("")}\`)for(v=c.codePointAt();v|0;v/=97)t+=String.fromCharCode(v%97+31);eval(t)`}function numbersParser(e){let r=e;const t=r.length%6;0!==t&&(r+="0".repeat(6-t));let n=`m='';for(x of\`${r.match(new RegExp(".{6}","g")).map(e=>createCharDec(e)).join("")}\`)m+=\`\${x.codePointAt()}\`.padStart(6,0)`;return 0!==t?n+=`;m=m.slice(0,-${6-t})`:n}function parseCode(e,r){let t="";return t="NUMBERS"===r.toUpperCase()?numbersParser(e):textParser(e),t}export default parseCode;
